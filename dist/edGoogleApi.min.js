!function(){"use strict";function GoogleMapAPI($http,$q,$log,uiGmapGoogleMapApi){function lookUpGeocode(address,zipCode){var request,deferred=$q.defer();return request=zipCode?{componentRestrictions:{postalCode:address}}:{address:address},uiGmapGoogleMapApi.then(function(){var geocoder=new google.maps.Geocoder;geocoder.geocode(request,function(results,status){status==google.maps.GeocoderStatus.OK?deferred.resolve(results):($log.error("Geocode was not successful for the following reason: "+status),deferred.reject("Geocode was not successful for the following reason: "+status))})}),deferred.promise}function getBuildingSiteDistances(buidlingSiteLocation,destinations){var deferred=$q.defer();return uiGmapGoogleMapApi.then(function(){var origin=new google.maps.LatLng(buidlingSiteLocation.lat,buidlingSiteLocation.lng),origins=[];for(var i in destinations)origins.push(origin);var service=new google.maps.DistanceMatrixService;service.getDistanceMatrix({origins:origins,destinations:destinations,travelMode:google.maps.TravelMode.DRIVING,unitSystem:google.maps.UnitSystem.METRIC,avoidHighways:!1,avoidTolls:!1},function(response,status){deferred.resolve(response)},function(error){deferred.reject(response)})}),deferred.promise}function lookUpMethod(search,resultCallback,faultCallBack){if(angular.isNumber(Number(search))&&5===search.toString().length){var split=search.toString().split("");split.splice(3,0," "),search=split.join("")}if(search.length<3)return $q.reject();var promiseCZ=$http.get("http://maps.googleapis.com/maps/api/geocode/json?address="+search+",CZ"),promiseSK=$http.get("http://maps.googleapis.com/maps/api/geocode/json?address="+search+",SK"),re=$q.all([promiseCZ,promiseSK]).then(function(response){var results=response[0].data.results.concat(response[1].data.results);$log.debug("googleapis autocomplete result:"),$log.debug(results);var idcs=0,ar=[];return results.forEach(function(item){var czsk=item.address_components.find(function(ac){return"CZ"===ac.short_name||"SK"===ac.short_name&&ac.short_name!==ac.long_name&&(ac.long_name.toLowerCase().indexOf("republika")>-1||ac.long_name.toLowerCase().indexOf("slovensko")>-1)?ac:void 0});czsk&&ar.push({id:idcs++,name:item.formatted_address,location:item.geometry.location,data:item})}),ar}.bind(this),function(error){}.bind(this));return re}return{lookUpGeocode:lookUpGeocode,getBuildingSiteDistances:getBuildingSiteDistances,lookUpMethod:lookUpMethod}}angular.module("ed.googleApi").factory("googleMapAPI",GoogleMapAPI),GoogleMapAPI.$inject=["$http","$q","$log","uiGmapGoogleMapApi"]}(),function(){"use strict"}();